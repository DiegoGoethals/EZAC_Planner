@page "/calendarslist"
@rendermode InteractiveServer

@inject ICalendarService CalendarService
@inject IUserService UserService
@inject EmailService EmailService
@inject NavigationManager Navigation

<h3>Alle kalenders</h3>

<button class="btn btn-primary" @onclick="CreateCalendar">Maak een nieuwe kalender</button>

<ConfirmDeletePopUp @ref="DeletePopUp" deleteCalendar="@DeleteCalendar" />

@if (calendars != null)
{
    <table class="table table-hover mt-4">
        <thead class="thead-light">
            <tr>
                <th>Naam</th>
                <th>Jaar</th>
                <th>Acties</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var calendar in calendars)
            {
                <tr>
                    <td>@calendar.Name</td>
                    <td>@calendar.Start.ToString("yyyy/MM") tot @calendar.End.ToString("yyyy/MM")</td>
                    <td>
                        <button class="btn btn-warning btn-sm" @onclick="() => UpdateCalendar(calendar.Id)">bewerken</button>
                        <button class="btn btn-danger btn-sm" @onclick="() => ShowDeletePopUp(calendar.Id)">Verwijderen</button>
                        <button class="btn btn-info btn-sm" @onclick="() => OverviewCalendar(calendar.Id)">Overzicht</button>
                        <button class="btn btn-info btn-sm" @onclick="() => GenerateUniqueLink(calendar.Id)">Link Versturen</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

else
{
    <p>Geen kalenders gevonden.</p>
}


@code {
    private List<ApplicationCalendar> calendars;

    private ConfirmDeletePopUp DeletePopUp;



    protected override async Task OnInitializedAsync()
    {
        var calendarResult = await CalendarService.GetAllAsync();

        if (calendarResult.IsSucces)
        {
            calendars = calendarResult.Value.ToList();
        }
    }

    private void UpdateCalendar(Guid calendarId)
    {
        Navigation.NavigateTo($"calendarupdate/{calendarId}");
    }

    private async Task ShowDeletePopUp(Guid calendarId)
    {
        await DeletePopUp.Show(calendarId);
    }

    private async Task DeleteCalendar(Guid calendarId)
    {
        await CalendarService.DeleteAsync(calendarId);
        var calendarResult = await CalendarService.GetAllAsync();

        if (calendarResult.IsSucces)
        {
            calendars = calendarResult.Value.ToList();
        }
        StateHasChanged();
    }

    private void CreateCalendar()
    {
        Navigation.NavigateTo("calendar-creator");
    }

    private void OverviewCalendar(Guid calendarId)
    {
        Navigation.NavigateTo($"calendar/{calendarId}");
    }

    private async Task GenerateUniqueLink(Guid calendarId)
    {
        var baseUrl = "https://localhost:44375/userpreferencecalendar";
        var usersResult = await UserService.GetAllAsync();

        if (usersResult.IsSucces)
        {
            foreach (var user in usersResult.Value)
            {
                var uniqueLink = $"{baseUrl}/{calendarId}/{user.Id}";
                var subject = "Kalender link";
                var body = $"Hello {user.Name},<br/><br/>Here is your unique calendar link: <a href=\"{uniqueLink}\">Klik hier</a>. <br/><br/> De Zweefvliegers";
                await EmailService.SendEmailAsync("goethalsdiego@gmail.com", subject, body);
            }
        }
    }
}
