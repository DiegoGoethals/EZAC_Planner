@page "/"

@rendermode InteractiveServer

@inject NavigationManager NavigationManager
@inject IUserService UserService
@inject Ezac.Roster.Domain.Services.LogInBooLService LogInBooLService


<style>
    .h1 {
        text-align: center;
    }
</style>

<PageTitle>Login</PageTitle>


<h1 class="h1">EZAC Roosterplanner Login</h1>

<div>
    <MudCard>
        <MudCardContent>
            <MudTextField @bind-Value="UserName" Placeholder="Gebruikersnaam" />
            <MudTextField @bind-Value="Password" Placeholder="Wachtwoord" InputType="@(!showPassword ? InputType.Password : InputType.Text)" />
            <MudIcon Icon="@(showPassword ? Icons.Material.Filled.Visibility : Icons.Material.Filled.VisibilityOff)" Size="Size.Medium" @onclick="TogglePasswordVisibility" />
        </MudCardContent>
        <MudCardActions>
            <MudButton Variant="Variant.Filled" Color="Color.Primary" Disabled="@isLoading" @onclick="@(async () => await Login())">
                @if (isLoading)
                {
                    <MudProgressCircular Indeterminate="true" Color="Color.Primary" />
                    <span class="ml-2">Logging in...</span>
                }
                else
                {
                    <span>Login</span>
                }
            </MudButton>
        </MudCardActions>
    </MudCard>
</div>
<div>
    <label>@Message</label>
</div>
@code{
    private string UserName;
    private string Password;
    private string Message = "Gelieve in te loggen";
    private bool showPassword;
    private bool isLoading = false;

    private const string HardcodedPassword = "ezac";

    private async Task Login()
    {
        isLoading = true;
        if (string.IsNullOrWhiteSpace(UserName) || string.IsNullOrWhiteSpace(Password))
        {
            Message = "Gebruikersnaam en wachtwoord zijn verplicht";
            return;
        }
        if (Password == HardcodedPassword)
        {
            var users = await UserService.GetAllAsync();
            var user = users.Value.FirstOrDefault(u => u.Name == UserName);
            if (user != null)
            {
                Message = "Logging in";
                LogInBooLService.IsLoggedIn = true;
                NavigationManager.NavigateTo("/calendarslist");
            }
            else
            {
                Message = "Gebruikersnaam of/en wachtwoord zijn niet juist";
            }
        }
        else
        {
            Message = "Gebruikersnaam of/en wachtwoord zijn niet juist";
        }
        isLoading = false;
    }

    private void TogglePasswordVisibility()
    {
        showPassword = !showPassword;
    }
    //await ProtectedLocalStore.SetAsync("IsLoggedIn", IsLoggedIn);
}


